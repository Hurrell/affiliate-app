{"version":3,"sources":["components/Header.js","components/Sidebar.js","renderers/renderIncomeByDevice.js","renderers/renderIncomeByTag.js","functions/getCommission.js","functions/incomeByTag.js","functions/incomeByCategory.js","renderers/renderIncomeByCategory.js","functions/incomeByDevice.js","renderers/renderIncomeByTagAndDate.js","functions/incomeByTagAndDay.js","functions/salesByDevice.js","renderers/renderPiechart.js","functions/averageCommission.js","components/Sales.js","functions/basicStats.js","functions/filter.js","components/Home.js","components/Main.js","components/settings/TagSettings.js","components/settings/CommissionTable.js","components/settings/AccordianItem.js","components/settings/Settings.js","functions/xlsxImporter.js","functions/getUniqueValues.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleFileInput","handleToggleSettings","className","type","name","id","accept","onChange","htmlFor","onClick","SidebarItem","item","handleChartSelect","classString","selected","data-chartname","chartname","Sidebar","chart","itemList","map","key","RenderIncomeByDevice","props","layout","groupMode","data","totalsByDevice","keys","indexBy","margin","top","right","bottom","left","padding","colors","scheme","defs","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","RenderIncomeByTag","totalsByTag","getCommission","category","specifiedCommissions","defaultUSCommissionList","commission","specCommissionIndex","findIndex","Number","commissionIndex","incomeByTag","tagTotals","Error","itemIndex","e","tag","lineCost","qty","push","sales","income","tabletIncome","deviceTypeGroup","desktopIncome","phoneIncome","toFixed","sort","a","b","incomeByCategory","selectedCategories","categoryTotals","includes","RenderIncomeByCategory","totalsByCategory","incomeByDevice","categories","deviceTotals","device","RenderIncomeByTagAndDate","totalsByTagAndDate","xScale","yScale","min","max","stacked","reverse","orient","enablePoints","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","pointLabel","pointLabelYOffset","useMesh","symbolShape","symbolBorderColor","itemBackground","incomeByTagAndDay","lineIncome","date","split","x","y","dateIndex","salesByDevice","RenderPiechart","value","innerRadius","padAngle","cornerRadius","borderWidth","radialLabelsSkipAngle","radialLabelsTextColor","radialLabelsLinkColor","sliceLabelsSkipAngle","sliceLabelsTextColor","itemTextColor","averageCommission","totalSales","totalIncome","proportion","Math","round","Sales","jsObjData","basicStats","items","itemsShipped","returns","returnsCost","actualIncome","getTotalOrdersTurnover","getOrdersVolume","getTotalSalesTurnover","getSalesVolume","getTotalReturnsCost","getTotalReturns","baskets","index","dateShipped","getTotalOrdersBaskets","getTotalSalesBaskets","getTotalReturnsBaskets","getTotalActualIncome","selectedTags","startDate","endDate","filteredData","console","log","filter","Home","currencyFormat","currency","maximumFractionDigits","minimumFractionDigits","Intl","NumberFormat","format","getAverageOrdersItemCost","getAverageOrdersBasketCost","getAverageSalesItemCost","getAverageSalesBasketCost","getAverageReturnedItemCost","getAverageReturnsBasketCost","getAverageFeeFraction","getAverageFee","Main","renderChart","dateBanner","lastDate","String","firstDate","length","TagSettings","tags","handleTagSelect","onSelectAllTags","onTop10TagClick","useState","tagDisplayOrder","setTagDisplayOrder","orderedTags","setOrderedTags","handleTagSort","event","preventDefault","target","dataset","order","tagsArray","localeCompare","every","iter","updateTags","listTags","checked","data-tag","onSubmit","data-order","CommissionTable","onCommissionChange","onResetCommissions","onTop10Click","handleCategorySelect","onSelectAll","categoryDisplayOrder","setCategoryDisplayOrder","commissions","setCommissions","categoriesArray","commissionTable","obj","i","updateCommissions","handleCommissionChange","handleCategorySort","listCategories","data-category","AccordianItem","expanded","contents","Settings","handleResetCommissions","handleTop10Click","handleSelectAllTags","handleTop10TagClick","handleClearAllFilters","expandedSection","setExpandedSection","handleButtonClick","section","data-section","arrayToJsObj","pageData","orderPageHeaders","orderPageJson","row","asin","linkType","indirectSales","orderPageToJson","earningsPageHeaders","earningsPageJson","seller","price","earningsPageToJson","xlsxImporter","file","files","Promise","resolve","reject","reader","FileReader","onload","workbook","XLSX","read","result","SheetNames","forEach","sheetName","workSheet","Sheets","utils","sheet_to_json","header","onerror","readAsBinaryString","getUniqueValues","listOfObjects","objectKey","uniqueCategories","App","setJsObjData","setSpecifiedCommissions","setSelectedCategories","setCategories","setSelectedTags","setTags","initCategories","feeEarningsCategories","feeOrdersCategories","combined","newCategories","Set","specifiedCommission","initTags","feeEarningsTags","feeOrdersTags","newTags","setChart","settingsOpen","setSettingsOpen","appClassString","concat","newCommissions","top10Categories","toString","changedCategory","categoryIndex","changedTag","tagIndex","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.899bfe89.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = ({ handleFileInput, handleToggleSettings }) => {\n  return (\n    <div className=\"header\">\n      <div></div>\n      <div>\n        <input\n          className=\"file-input\"\n          type=\"file\"\n          name=\"file\"\n          id=\"file-selector\"\n          accept=\".xlsx\"\n          onChange={handleFileInput}\n        ></input>\n        <label htmlFor=\"file-selector\">Load file</label>\n      </div>\n      <div onClick={handleToggleSettings} className=\"settings-selector\">\n        Settings\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Sidebar.css\";\n\nconst SidebarItem = ({ item, handleChartSelect }) => {\n  // Give additional CSS to selected item.\n  let classString = \"sidebar-chart-item\";\n  if (item.selected) {\n    classString += \" selected-item\";\n  }\n  return (\n    <div\n      data-chartname={item.chartname}\n      onClick={handleChartSelect}\n      className={classString}\n    >\n      {item.name}\n    </div>\n  );\n};\n\nconst Sidebar = ({ chart, handleChartSelect }) => {\n  //   const [chart, setChart] = useState(\"devices\");\n  //   const handleChartSelect = (event) => {\n  //     setChart(event.target.dataset.chartname);\n  //   };\n  const itemList = [\n    { name: \"Home\", chartname: \"home\" },\n    { name: \"Devices\", chartname: \"devices\" },\n    { name: \"Tag\", chartname: \"tag\" },\n    { name: \"Category\", chartname: \"category\" },\n    { name: \"Sales\", chartname: \"sales\" },\n    { name: \"Time\", chartname: \"time\" },\n  ];\n  // Add which item selected.\n  for (let item of itemList) {\n    item.selected = chart === item.chartname;\n  }\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">Affiliate App</div>\n      <div className=\"sidebar-chart-list\">\n        {/* Create sidebar items */}\n        {itemList.map((item) => (\n          <SidebarItem\n            key={item.chartname}\n            item={item}\n            handleChartSelect={handleChartSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Sidebar;\n","import { ResponsiveBar } from \"@nivo/bar\";\nimport React from \"react\";\n\nconst RenderIncomeByDevice = (props) => {\n  return (\n    <ResponsiveBar\n      // axisLeft={{\n      //   renderTick: CustomTick,\n      // }}\n      layout=\"horizontal\"\n      groupMode=\"stacked\"\n      data={props.totalsByDevice}\n      keys={[\"income\"]}\n      //   keys={[\"hot dog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"]}\n      indexBy=\"deviceTypeGroup\"\n      margin={{ top: 50, right: 150, bottom: 50, left: 230 }}\n      padding={0.3}\n      colors={{ scheme: \"nivo\" }}\n      defs={[\n        {\n          id: \"dots\",\n          type: \"patternDots\",\n          background: \"inherit\",\n          color: \"#38bcb2\",\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: \"lines\",\n          type: \"patternLines\",\n          background: \"inherit\",\n          color: \"#eed312\",\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      fill={[\n        {\n          match: {\n            id: \"fries\",\n          },\n          id: \"dots\",\n        },\n        {\n          match: {\n            id: \"sandwich\",\n          },\n          id: \"lines\",\n        },\n      ]}\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"Income ($)\",\n        legendPosition: \"middle\",\n        legendOffset: 32,\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"\",\n        legendPosition: \"middle\",\n        legendOffset: -40,\n      }}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n      legends={[\n        {\n          dataFrom: \"keys\",\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: \"left-to-right\",\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n    />\n  );\n};\n\nexport default RenderIncomeByDevice;\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n","import { ResponsiveBar } from \"@nivo/bar\";\nimport React from \"react\";\n\nconst RenderIncomeByTag = (props) => {\n  return (\n    <ResponsiveBar\n      // axisLeft={{\n      //   renderTick: CustomTick,\n      // }}\n      layout=\"horizontal\"\n      groupMode=\"stacked\"\n      data={props.totalsByTag}\n      keys={[\"phoneIncome\", \"desktopIncome\", \"tabletIncome\"]}\n      //   keys={[\"hot dog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"]}\n      indexBy=\"tag\"\n      margin={{ top: 50, right: 130, bottom: 50, left: 150 }}\n      padding={0.3}\n      colors={{ scheme: \"nivo\" }}\n      defs={[\n        {\n          id: \"dots\",\n          type: \"patternDots\",\n          background: \"inherit\",\n          color: \"#38bcb2\",\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: \"lines\",\n          type: \"patternLines\",\n          background: \"inherit\",\n          color: \"#eed312\",\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      fill={[\n        {\n          match: {\n            id: \"fries\",\n          },\n          id: \"dots\",\n        },\n        {\n          match: {\n            id: \"sandwich\",\n          },\n          id: \"lines\",\n        },\n      ]}\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"Income ($)\",\n        legendPosition: \"middle\",\n        legendOffset: 32,\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"\",\n        legendPosition: \"middle\",\n        legendOffset: -40,\n      }}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n      legends={[\n        {\n          dataFrom: \"keys\",\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: \"left-to-right\",\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n    />\n  );\n};\n\nexport default RenderIncomeByTag;\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n","const getCommission = (category, specifiedCommissions = []) => {\n  //returns commission as decimal e.g. 1% == 0.01\n  const defaultUSCommissionList = [\n    { category: \"Amazon Fashion Private Brands\", commission: 0.04 },\n    { category: \"Amazon Fresh Products\", commission: 0.01 },\n    { category: \"Amazon Gift Cards\", commission: 0.0 },\n    { category: \"Amazon Pantry\", commission: 0.01 },\n    { category: \"Arts, Crafts & Sewing\", commission: 0.04 },\n    { category: \"Amazon Pantry\", commission: 0.01 },\n    { category: \"Audible Audiobooks\", commission: 0.04 },\n    { category: \"Automotive\", commission: 0.045 },\n    { category: \"Baby & Nursery\", commission: 0.03 },\n    { category: \"Beauty & Grooming\", commission: 0.03 },\n    { category: \"Blu-Ray & DVD\", commission: 0.025 },\n    { category: \"Books & Textbooks\", commission: 0.045 },\n    { category: \"Business & Industrial Supplies\", commission: 0.03 },\n    { category: \"Camera, Photo & Video\", commission: 0.04 },\n    { category: \"CDs & Vinyl\", commission: 0.05 },\n    { category: \"Cell Phones & Accessories\", commission: 0.04 },\n    { category: \"Clothing & Accessories\", commission: 0.04 },\n    { category: \"Computers, Tablets & Components\", commission: 0.025 },\n    { category: \"Digital Music\", commission: 0.045 },\n    { category: \"Echo & Alexa Accessories\", commission: 0.04 },\n    { category: \"Echo Devices\", commission: 0.04 },\n    { category: \"Electronic Components & Home Audio\", commission: 0.04 },\n    { category: \"Element Smart TV\", commission: 0.04 },\n    { category: \"Fire Tablets\", commission: 0.04 },\n    { category: \"Fire Tablets Accessories\", commission: 0.04 },\n    { category: \"Fire TV Accessories\", commission: 0.04 },\n    { category: \"Fire TV Devices\", commission: 0.04 },\n    { category: \"Furniture\", commission: 0.04 },\n    { category: \"Grocery & Gourmet Food\", commission: 0.01 },\n    { category: \"Handmade\", commission: 0.05 },\n    { category: \"Health & Household\", commission: 0.01 },\n    { category: \"Health &amp; Personal Care Appliances\", commission: 0.01 },\n    { category: \"Home\", commission: 0.03 },\n    { category: \"Home Entertainment\", commission: 0.04 },\n    { category: \"Home Improvement\", commission: 0.03 },\n    { category: \"Jewelry\", commission: 0.04 },\n    { category: \"Kindle Books\", commission: 0.04 },\n    { category: \"Kindle E-readers\", commission: 0.04 },\n    { category: \"Kindle E-readers Accessories\", commission: 0.04 },\n    { category: \"Kitchen & Dining\", commission: 0.045 },\n    { category: \"Luggage\", commission: 0.04 },\n    { category: \"Miscellaneous\", commission: 0.04 },\n    { category: \"Mobile Electronics\", commission: 0.04 },\n    { category: \"Musical Instruments\", commission: 0.03 },\n    { category: \"Office & School Supplies\", commission: 0.04 },\n    { category: \"Other\", commission: 0.04 },\n    { category: \"Other Gift Card Brands\", commission: 0.0 },\n    { category: \"Outdoor Recreation\", commission: 0.03 },\n    { category: \"Patio, Lawn & Garden\", commission: 0.03 },\n    { category: \"Pet Food & Supplies\", commission: 0.03 },\n    { category: \"Power & Hand Tools\", commission: 0.03 },\n    { category: \"Premium Beauty\", commission: 0.1 },\n    { category: \"Prime Exclusive Phones\", commission: 0.04 },\n    { category: \"Ring Alarms and Smart Lighting\", commission: 0.04 },\n    { category: \"Shoes, Handbags, Wallets, Sunglasses\", commission: 0.03 },\n    { category: \"Software Download\", commission: 0.04 },\n    { category: \"Sports & Fitness\", commission: 0.03 },\n    { category: \"Toys & Games\", commission: 0.03 },\n    { category: \"VHS\", commission: 0.04 },\n    { category: \"Video Game Downloads\", commission: 0.02 },\n    { category: \"Video Games\", commission: 0.01 },\n    { category: \"Video On Demand: Rent or Buy\", commission: 0.05 },\n    { category: \"Watches\", commission: 0.04 },\n    { category: \"Wine, Spirits & Beer\", commission: 0.0 },\n  ];\n\n  //Find and return specifiedCommission if it exists\n  const specCommissionIndex = specifiedCommissions.findIndex(\n    (item) => category === item.category\n  );\n\n  if (specCommissionIndex !== -1) {\n    return Number(specifiedCommissions[specCommissionIndex].commission);\n  }\n\n  //otherwise take from table\n  const commissionIndex = defaultUSCommissionList.findIndex(\n    (item) => category === item.category\n  );\n\n  //return default if no value avail\n  if (commissionIndex === -1) {\n    return 0.04;\n  } else {\n    // return table value\n    const commission = defaultUSCommissionList[commissionIndex].commission;\n    return Number(commission);\n  }\n};\n\nexport default getCommission;\n","import getCommission from \"./getCommission\";\n\nconst incomeByTag = (data, specifiedCommissions) => {\n  let tagTotals = [];\n\n  if (!data[\"Fee-Orders\"]) {\n    throw Error(\"No Data\");\n  }\n  //iterate through each data point\n  for (let item of data[\"Fee-Orders\"]) {\n    let itemIndex = tagTotals.findIndex((e) => e.tag === item.tag);\n    let lineCost = Number(item.qty) * Number(item[\"price($)\"]);\n    //add tag if unique\n    if (itemIndex === -1) {\n      tagTotals.push({\n        tag: item.tag,\n        sales: lineCost,\n        income: Number(\n          getCommission(item.category, specifiedCommissions) * lineCost\n        ),\n        tabletIncome:\n          item.deviceTypeGroup === \"TABLET\"\n            ? getCommission(item.category, specifiedCommissions) * lineCost\n            : 0,\n        desktopIncome:\n          item.deviceTypeGroup === \"DESKTOP\"\n            ? getCommission(item.category, specifiedCommissions) * lineCost\n            : 0,\n        phoneIncome:\n          item.deviceTypeGroup === \"PHONE\"\n            ? getCommission(item.category, specifiedCommissions) * lineCost\n            : 0,\n      });\n    } else {\n      // update tag total\n      tagTotals[itemIndex].sales += lineCost;\n      tagTotals[itemIndex].income += Number(\n        getCommission(item.category, specifiedCommissions) * lineCost\n      );\n      tagTotals[itemIndex].tabletIncome +=\n        item.deviceTypeGroup === \"TABLET\"\n          ? getCommission(item.category, specifiedCommissions) * lineCost\n          : 0;\n      tagTotals[itemIndex].desktopIncome +=\n        item.deviceTypeGroup === \"DESKTOP\"\n          ? getCommission(item.category, specifiedCommissions) * lineCost\n          : 0;\n      tagTotals[itemIndex].phoneIncome +=\n        item.deviceTypeGroup === \"PHONE\"\n          ? getCommission(item.category, specifiedCommissions) * lineCost\n          : 0;\n    }\n  }\n  //round all numbers to nearest cent\n  for (let tag of tagTotals) {\n    if (tag.sales) {\n      // console.log(typeof tag.sales);\n      tag.sales = Number(tag.sales.toFixed(2));\n      // console.log(typeof tag.sales);\n    }\n    if (tag.income) {\n      // console.log(tag.income);\n\n      tag.income = Number(tag.income.toFixed(2));\n      // console.log(tag.income);\n    }\n    if (tag.tabletIncome) {\n      tag.tabletIncome = Number(tag.tabletIncome.toFixed(2));\n    }\n    if (tag.desktopIncome) {\n      tag.desktopIncome = Number(tag.desktopIncome.toFixed(2));\n    }\n    if (tag.phoneIncome) {\n      tag.phoneIncome = Number(tag.phoneIncome.toFixed(2));\n    }\n  }\n  //sort it all!\n  tagTotals = tagTotals.sort((a, b) => {\n    if (a.income > b.income) {\n      return -1;\n    } else if (a.income < b.income) {\n      return 1;\n    }\n    return 0;\n  });\n\n  return tagTotals;\n};\n\nexport default incomeByTag;\n","import getCommission from \"./getCommission\";\n\nconst incomeByCategory = (data, specifiedCommissions, selectedCategories) => {\n  let categoryTotals = [];\n\n  if (!data[\"Fee-Orders\"]) {\n    throw Error(\"No Data\");\n  }\n  //iterate through each data point\n  for (let item of data[\"Fee-Orders\"]) {\n    // Ignore if not in selected Categories.\n    if (!selectedCategories.includes(item.category)) continue;\n\n    let itemIndex = categoryTotals.findIndex(\n      (e) => e.category === item.category\n    );\n    let lineCost = Number(item.qty) * Number(item[\"price($)\"]);\n    //add tag if unique\n    if (itemIndex === -1) {\n      categoryTotals.push({\n        category: item.category,\n        sales: lineCost,\n        income: Number(\n          getCommission(item.category, specifiedCommissions) * lineCost\n        ),\n        tabletIncome:\n          item.deviceTypeGroup === \"TABLET\"\n            ? getCommission(item.category, specifiedCommissions) * lineCost\n            : 0,\n        desktopIncome:\n          item.deviceTypeGroup === \"DESKTOP\"\n            ? getCommission(item.category, specifiedCommissions) * lineCost\n            : 0,\n        phoneIncome:\n          item.deviceTypeGroup === \"PHONE\"\n            ? getCommission(item.category, specifiedCommissions) * lineCost\n            : 0,\n      });\n    } else {\n      // update tag total\n      categoryTotals[itemIndex].sales += lineCost;\n      categoryTotals[itemIndex].income += Number(\n        getCommission(item.category, specifiedCommissions) * lineCost\n      );\n      categoryTotals[itemIndex].tabletIncome +=\n        item.deviceTypeGroup === \"TABLET\"\n          ? getCommission(item.category, specifiedCommissions) * lineCost\n          : 0;\n      categoryTotals[itemIndex].desktopIncome +=\n        item.deviceTypeGroup === \"DESKTOP\"\n          ? getCommission(item.category, specifiedCommissions) * lineCost\n          : 0;\n      categoryTotals[itemIndex].phoneIncome +=\n        item.deviceTypeGroup === \"PHONE\"\n          ? getCommission(item.category, specifiedCommissions) * lineCost\n          : 0;\n    }\n  }\n  //round all numbers to nearest cent\n  for (let category of categoryTotals) {\n    if (category.sales) {\n      // console.log(typeof tag.sales);\n      category.sales = Number(category.sales.toFixed(2));\n      // console.log(typeof tag.sales);\n    }\n    if (category.income) {\n      // console.log(tag.income);\n\n      category.income = Number(category.income.toFixed(2));\n      // console.log(tag.income);\n    }\n    if (category.tabletIncome) {\n      category.tabletIncome = Number(category.tabletIncome.toFixed(2));\n    }\n    if (category.desktopIncome) {\n      category.desktopIncome = Number(category.desktopIncome.toFixed(2));\n    }\n    if (category.phoneIncome) {\n      category.phoneIncome = Number(category.phoneIncome.toFixed(2));\n    }\n  }\n  //sort it all!\n  categoryTotals = categoryTotals.sort((a, b) => {\n    if (a.income > b.income) {\n      return -1;\n    } else if (a.income < b.income) {\n      return 1;\n    }\n    return 0;\n  });\n\n  return categoryTotals;\n};\n\nexport default incomeByCategory;\n","import { ResponsiveBar } from \"@nivo/bar\";\nimport React from \"react\";\n\nconst RenderIncomeByCategory = (props) => {\n  return (\n    <ResponsiveBar\n      // axisLeft={{\n      //   renderTick: CustomTick,\n      // }}\n      layout=\"horizontal\"\n      groupMode=\"stacked\"\n      data={props.totalsByCategory}\n      keys={[\"phoneIncome\", \"desktopIncome\", \"tabletIncome\"]}\n      //   keys={[\"hot dog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"]}\n      indexBy=\"category\"\n      margin={{ top: 50, right: 150, bottom: 50, left: 230 }}\n      padding={0.3}\n      colors={{ scheme: \"nivo\" }}\n      defs={[\n        {\n          id: \"dots\",\n          type: \"patternDots\",\n          background: \"inherit\",\n          color: \"#38bcb2\",\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: \"lines\",\n          type: \"patternLines\",\n          background: \"inherit\",\n          color: \"#eed312\",\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      fill={[\n        {\n          match: {\n            id: \"fries\",\n          },\n          id: \"dots\",\n        },\n        {\n          match: {\n            id: \"sandwich\",\n          },\n          id: \"lines\",\n        },\n      ]}\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"Income ($)\",\n        legendPosition: \"middle\",\n        legendOffset: 32,\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"\",\n        legendPosition: \"middle\",\n        legendOffset: -40,\n      }}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n      legends={[\n        {\n          dataFrom: \"keys\",\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: \"left-to-right\",\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n    />\n  );\n};\n\nexport default RenderIncomeByCategory;\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n","import getCommission from \"./getCommission\";\n\nconst incomeByDevice = (data, specifiedCommissions, categories) => {\n  let deviceTotals = [];\n\n  if (!data[\"Fee-Orders\"]) {\n    throw Error(\"No Data\");\n  }\n  //iterate through each data point\n  for (let item of data[\"Fee-Orders\"]) {\n    let itemIndex = deviceTotals.findIndex(\n      (e) => e.deviceTypeGroup === item.deviceTypeGroup\n    );\n    let lineCost = Number(item.qty) * Number(item[\"price($)\"]);\n    //add device if unique\n    if (itemIndex === -1) {\n      deviceTotals.push({\n        deviceTypeGroup: item.deviceTypeGroup,\n        sales: lineCost,\n        income: Number(\n          getCommission(item.category, specifiedCommissions) * lineCost\n        ),\n      });\n    } else {\n      // update device total\n      deviceTotals[itemIndex].sales += lineCost;\n      deviceTotals[itemIndex].income += Number(\n        getCommission(item.category, specifiedCommissions) * lineCost\n      );\n    }\n  }\n  //round all numbers to nearest cent\n  for (let device of deviceTotals) {\n    if (device.sales) {\n      // console.log(typeof tag.sales);\n      device.sales = Number(device.sales.toFixed(2));\n      // console.log(typeof tag.sales);\n    }\n    if (device.income) {\n      // console.log(tag.income);\n\n      device.income = Number(device.income.toFixed(2));\n      // console.log(tag.income);\n    }\n  }\n  //sort it all!\n  deviceTotals = deviceTotals.sort((a, b) => {\n    if (a.income > b.income) {\n      return -1;\n    } else if (a.income < b.income) {\n      return 1;\n    }\n    return 0;\n  });\n\n  return deviceTotals;\n};\n\nexport default incomeByDevice;\n","import { ResponsiveLine } from \"@nivo/line\";\nimport React from \"react\";\n\nconst RenderIncomeByTagAndDate = (props) => {\n  return (\n    <ResponsiveLine\n      data={props.totalsByTagAndDate}\n      margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n      xScale={{ type: \"point\" }}\n      yScale={{\n        type: \"linear\",\n        min: \"auto\",\n        max: \"auto\",\n        stacked: false,\n        reverse: false,\n      }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        orient: \"bottom\",\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"date\",\n        legendOffset: 36,\n        legendPosition: \"middle\",\n      }}\n      axisLeft={{\n        orient: \"left\",\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"income\",\n        legendOffset: -40,\n        legendPosition: \"middle\",\n      }}\n      colors={{ scheme: \"dark2\" }}\n      enablePoints={false}\n      pointSize={10}\n      pointColor={{ theme: \"background\" }}\n      pointBorderWidth={2}\n      pointBorderColor={{ from: \"serieColor\" }}\n      pointLabel=\"y\"\n      pointLabelYOffset={-12}\n      useMesh={true}\n      legends={[\n        {\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 100,\n          translateY: 0,\n          itemsSpacing: 0,\n          itemDirection: \"left-to-right\",\n          itemWidth: 80,\n          itemHeight: 20,\n          itemOpacity: 0.75,\n          symbolSize: 12,\n          symbolShape: \"circle\",\n          symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemBackground: \"rgba(0, 0, 0, .03)\",\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nexport default RenderIncomeByTagAndDate;\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n","import getCommission from \"./getCommission\";\nimport incomeByTag from \"./incomeByTag\";\nconst incomeByTagAndDay = (data, specifiedCommissions) => {\n  let tagTotals = [];\n\n  if (!data[\"Fee-Orders\"]) {\n    throw Error(\"No Data\");\n  }\n  //iterate through each data point\n  for (let item of data[\"Fee-Orders\"]) {\n    let itemIndex = tagTotals.findIndex((e) => e.id === item.tag);\n    let lineCost = Number(item.qty) * Number(item[\"price($)\"]);\n    let lineIncome = Number(\n      getCommission(item.category, specifiedCommissions) * lineCost\n    );\n    let date = item.date.split(\" \")[0];\n    //add tag if unique\n    if (itemIndex === -1) {\n      tagTotals.push({\n        id: item.tag,\n        data: [{ x: date, y: lineIncome }],\n      });\n      itemIndex = tagTotals.findIndex((e) => e.tag === item.tag);\n    } else {\n      //find if date in tag\n      //   console.log(\"date: \", date);\n      let dateIndex = tagTotals[itemIndex].data.findIndex((e) => e.x === date);\n      if (dateIndex === -1) {\n        //if not add data\n        tagTotals[itemIndex].data.push({ x: date, y: lineIncome });\n      } else {\n        // if date exists, update data\n        // console.log(tagTotals[itemIndex].data[dateIndex].y, lineIncome);\n        tagTotals[itemIndex].data[dateIndex].y += lineIncome;\n      }\n    }\n  }\n  //round all numbers to nearest cent and reverse order\n  for (let tag of tagTotals) {\n    for (let date of tag.data) {\n      date.y = Number(date.y.toFixed(2));\n    }\n    tag.data.reverse();\n  }\n\n  return tagTotals;\n};\n\nexport default incomeByTagAndDay;\n","const salesByDevice = (data, specifiedCommissions, categories) => {\n  //Take in json data\n  //Spit out nivo formatted data\n\n  let deviceTotals = [];\n\n  if (!data[\"Fee-Orders\"]) {\n    throw Error(\"No Data\");\n  }\n  //iterate through each data point\n  for (let item of data[\"Fee-Orders\"]) {\n    let itemIndex = deviceTotals.findIndex(\n      (e) => e.deviceTypeGroup === item.deviceTypeGroup\n    );\n    let lineCost = Number(item.qty) * Number(item[\"price($)\"]);\n    //add device if unique\n    if (itemIndex === -1) {\n      deviceTotals.push({\n        deviceTypeGroup: item.deviceTypeGroup,\n        sales: lineCost,\n      });\n    } else {\n      // update device total\n      deviceTotals[itemIndex].sales += lineCost;\n    }\n  }\n  //round all numbers to nearest cent\n  for (let device of deviceTotals) {\n    if (device.sales) {\n      device.sales = Number(device.sales.toFixed(2));\n    }\n  }\n  //sort it all!\n  deviceTotals = deviceTotals.sort((a, b) => {\n    if (a.sales > b.sales) {\n      return -1;\n    } else if (a.income < b.income) {\n      return 1;\n    }\n    return 0;\n  });\n\n  return deviceTotals;\n};\n\nexport default salesByDevice;\n","import { ResponsivePie } from \"@nivo/pie\";\n\nimport React from \"react\";\n\nconst RenderPiechart = (props) => {\n  //Data: props.data\n  //id: props.id\n  //value: props.value\n  return (\n    <ResponsivePie\n      data={props.data}\n      id={props.id}\n      value={props.value}\n      //   indexBy=\"deviceTypeGroup\"\n      margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n      innerRadius={0.5}\n      padAngle={0.7}\n      cornerRadius={3}\n      colors={{ scheme: \"nivo\" }}\n      borderWidth={1}\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\n      radialLabelsSkipAngle={10}\n      radialLabelsTextColor=\"#333333\"\n      radialLabelsLinkColor={{ from: \"color\" }}\n      sliceLabelsSkipAngle={10}\n      sliceLabelsTextColor=\"#333333\"\n      defs={[\n        {\n          id: \"dots\",\n          type: \"patternDots\",\n          background: \"inherit\",\n          color: \"rgba(255, 255, 255, 0.3)\",\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: \"lines\",\n          type: \"patternLines\",\n          background: \"inherit\",\n          color: \"rgba(255, 255, 255, 0.3)\",\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      fill={[\n        {\n          match: {\n            id: \"ruby\",\n          },\n          id: \"dots\",\n        },\n        {\n          match: {\n            id: \"c\",\n          },\n          id: \"dots\",\n        },\n        {\n          match: {\n            id: \"go\",\n          },\n          id: \"dots\",\n        },\n        {\n          match: {\n            id: \"python\",\n          },\n          id: \"dots\",\n        },\n        {\n          match: {\n            id: \"scala\",\n          },\n          id: \"lines\",\n        },\n        {\n          match: {\n            id: \"lisp\",\n          },\n          id: \"lines\",\n        },\n        {\n          match: {\n            id: \"elixir\",\n          },\n          id: \"lines\",\n        },\n        {\n          match: {\n            id: \"javascript\",\n          },\n          id: \"lines\",\n        },\n      ]}\n      legends={[\n        {\n          anchor: \"bottom\",\n          direction: \"row\",\n          justify: false,\n          translateX: 0,\n          translateY: 56,\n          itemsSpacing: 0,\n          itemWidth: 100,\n          itemHeight: 18,\n          itemTextColor: \"#999\",\n          itemDirection: \"left-to-right\",\n          itemOpacity: 1,\n          symbolSize: 18,\n          symbolShape: \"circle\",\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemTextColor: \"#000\",\n              },\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nexport default RenderPiechart;\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n","import getCommission from \"./getCommission\";\n\nconst averageCommission = (data, specifiedCommissions) => {\n  let totalSales = 0;\n  let totalIncome = 0;\n  if (!data[\"Fee-Orders\"]) {\n    throw Error(\"No Data\");\n  }\n\n  for (let item of data[\"Fee-Orders\"]) {\n    // let itemIndex = deviceTotals.findIndex(\n    //   (e) => e.deviceTypeGroup === item.deviceTypeGroup\n    // );\n    let lineCost = Number(item.qty) * Number(item[\"price($)\"]);\n    // //add device if unique\n    // if (itemIndex === -1) {\n    //   deviceTotals.push({\n    //     deviceTypeGroup: item.deviceTypeGroup,\n    //     sales: lineCost,\n    //   });\n    // } else {\n    //   // update device total\n    //   deviceTotals[itemIndex].sales += lineCost;\n    // }\n    totalSales += lineCost;\n    totalIncome += Number(\n      getCommission(item.category, specifiedCommissions) * lineCost\n    );\n  }\n  let proportion = totalIncome / totalSales;\n  let percent = Math.round(proportion * 10000) / 100;\n  return percent;\n};\n\nexport default averageCommission;\n","import React from \"react\";\n// import \"./Main.css\";\nimport \"./Sales.css\";\n\nimport averageCommission from \"../functions/averageCommission\";\n\nimport salesByDevice from \"../functions/salesByDevice\";\nimport RenderPiechart from \"../renderers/renderPiechart\";\n\nimport incomeByDevice from \"../functions/incomeByDevice\";\n\nconst Sales = ({\n  chart,\n  jsObjData,\n  specifiedCommissions,\n  selectedCategories,\n  categories,\n}) => {\n  return (\n    <div className=\"grid-charts\">\n      <div className=\"chart\">\n        <RenderPiechart\n          className=\"chart\"\n          data={salesByDevice(\n            jsObjData,\n            specifiedCommissions,\n            selectedCategories\n          )}\n          id=\"deviceTypeGroup\"\n          value=\"sales\"\n        />\n      </div>\n      <div className=\"chart\">\n        <RenderPiechart\n          data={incomeByDevice(\n            jsObjData,\n            specifiedCommissions,\n            selectedCategories\n          )}\n          id=\"deviceTypeGroup\"\n          value=\"income\"\n        />\n      </div>\n      <div className=\"figure\">\n        {/* <div>100%</div> */}\n        <h2>{averageCommission(jsObjData, specifiedCommissions)}%</h2>\n        <p>Average Affiliate Fee</p>\n      </div>\n      <div className=\"chart\">\n        <RenderPiechart\n          data={incomeByDevice(\n            jsObjData,\n            specifiedCommissions,\n            selectedCategories\n          )}\n          id=\"deviceTypeGroup\"\n          value=\"income\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Sales;\n","const basicStats = {};\n\nbasicStats.getOrdersVolume = (data) => {\n  let items = 0;\n  for (let item of data[\"Fee-Orders\"]) {\n    if (Number(item.qty)) {\n      items += Number(item.qty);\n    }\n  }\n  return items;\n};\n\nbasicStats.getSalesVolume = (data) => {\n  let sales = 0;\n  for (let item of data[\"Fee-Earnings\"]) {\n    if (Number(item.itemsShipped)) {\n      sales += Number(item.itemsShipped);\n    }\n  }\n  return sales;\n};\n\nbasicStats.getTotalReturns = (data) => {\n  let returns = 0;\n  for (let item of data[\"Fee-Earnings\"]) {\n    if (Number(item.returns)) {\n      returns += Number(item.returns);\n    }\n  }\n  return returns;\n};\n\nbasicStats.getTotalReturnsCost = (data) => {\n  let returnsCost = 0;\n  for (let item of data[\"Fee-Earnings\"]) {\n    if (Number(item.returns)) {\n      returnsCost += Number(item[\"revenue($)\"]);\n    }\n  }\n  return returnsCost;\n};\n\nbasicStats.getTotalOrdersTurnover = (data) => {\n  let totalSales = 0;\n  for (let item of data[\"Fee-Orders\"]) {\n    if (Number(item.qty)) {\n      totalSales += Number(item.qty) * Number(item[\"price($)\"]);\n    }\n  }\n  return totalSales;\n};\n\nbasicStats.getTotalSalesTurnover = (data) => {\n  let totalSales = 0;\n  for (let item of data[\"Fee-Earnings\"]) {\n    if (Number(item.itemsShipped)) {\n      totalSales += Number(item[\"revenue($)\"]);\n    }\n  }\n  return totalSales;\n};\n\nbasicStats.getTotalActualIncome = (data) => {\n  let actualIncome = 0;\n  for (let item of data[\"Fee-Earnings\"]) {\n    if (Number(item[\"adFees($)\"])) {\n      actualIncome += Number(item[\"adFees($)\"]);\n    }\n  }\n  return actualIncome;\n};\n\nbasicStats.getAverageOrdersItemCost = (data) => {\n  return (\n    basicStats.getTotalOrdersTurnover(data) / basicStats.getOrdersVolume(data)\n  );\n};\n\nbasicStats.getAverageSalesItemCost = (data) => {\n  return (\n    basicStats.getTotalSalesTurnover(data) / basicStats.getSalesVolume(data)\n  );\n};\n\nbasicStats.getAverageReturnedItemCost = (data) => {\n  return (\n    basicStats.getTotalReturnsCost(data) / basicStats.getTotalReturns(data)\n  );\n};\n\nbasicStats.getTotalOrdersBaskets = (data) => {\n  let baskets = 0;\n  data[\"Fee-Orders\"].map((item, index) => {\n    if (Number(item.qty)) {\n      if (baskets == 0) {\n        baskets += 1;\n      } else if (item.date != data[\"Fee-Orders\"][index - 1].date) {\n        baskets += 1;\n      }\n    }\n  });\n  return baskets;\n};\n\nbasicStats.getTotalSalesBaskets = (data) => {\n  let baskets = 0;\n  data[\"Fee-Earnings\"].map((item, index) => {\n    if (Number(item.itemsShipped)) {\n      if (baskets == 0) {\n        baskets += 1;\n      } else if (\n        item.dateShipped != data[\"Fee-Earnings\"][index - 1].dateShipped\n      ) {\n        baskets += 1;\n      }\n    }\n  });\n  return baskets;\n};\n\nbasicStats.getTotalReturnsBaskets = (data) => {\n  let baskets = 0;\n  data[\"Fee-Earnings\"].map((item, index) => {\n    if (Number(item.returns)) {\n      if (baskets == 0) {\n        baskets += 1;\n      } else if (\n        item.dateShipped != data[\"Fee-Earnings\"][index - 1].dateShipped\n      ) {\n        baskets += 1;\n      }\n    }\n  });\n  return baskets;\n};\n\nbasicStats.getAverageOrdersBasketCost = (data) => {\n  return (\n    basicStats.getTotalOrdersTurnover(data) /\n    basicStats.getTotalOrdersBaskets(data)\n  );\n};\n\nbasicStats.getAverageSalesBasketCost = (data) => {\n  return (\n    basicStats.getTotalSalesTurnover(data) /\n    basicStats.getTotalSalesBaskets(data)\n  );\n};\n\nbasicStats.getAverageReturnsBasketCost = (data) => {\n  return (\n    basicStats.getTotalReturnsCost(data) /\n    basicStats.getTotalReturnsBaskets(data)\n  );\n};\n\nbasicStats.getAverageFee = (data) => {\n  return (\n    basicStats.getTotalActualIncome(data) / basicStats.getSalesVolume(data)\n  );\n};\n\nbasicStats.getAverageFeeFraction = (data) => {\n  return (\n    basicStats.getTotalActualIncome(data) /\n    basicStats.getTotalSalesTurnover(data)\n  );\n};\n\nexport default basicStats;\n","export default function (\n  data,\n  selectedCategories,\n  selectedTags,\n  startDate,\n  endDate\n) {\n  let filteredData = {};\n  console.log(\"categories\", selectedCategories);\n  console.log(\"tags\", selectedTags);\n  console.log(\"dataintofilter\", data);\n  filteredData[\"Fee-Orders\"] = data[\"Fee-Orders\"].filter((item) => {\n    if (!selectedTags.includes(item.tag)) {\n      return false;\n    }\n    if (!selectedCategories.includes(item.category)) {\n      return false;\n    }\n    return true;\n  });\n\n  filteredData[\"Fee-Earnings\"] = data[\"Fee-Earnings\"].filter((item) => {\n    if (!selectedTags.includes(item.tag)) {\n      return false;\n    }\n    if (!selectedCategories.includes(item.category)) {\n      return false;\n    }\n    return true;\n  });\n  console.log(\"datafiltered\", filteredData);\n\n  return filteredData;\n}\n","import React from \"react\";\nimport basicStats from \"../functions/basicStats\";\nimport filter from \"../functions/filter\";\n\nimport \"./Home.css\";\n\nconst Home = ({\n  chart,\n  jsObjData,\n  specifiedCommissions,\n  selectedCategories,\n  categories,\n  selectedTags,\n}) => {\n  let currencyFormat = {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 0,\n    minimumFractionDigits: 0,\n  };\n  let percentFormat = {\n    style: \"percent\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n  };\n\n  let filteredData = filter(jsObjData, selectedCategories, selectedTags);\n  return (\n    <div className=\"home-column\">\n      <div>\n        <h2>Orders</h2>\n        <div className=\"home-row\">\n          <div>\n            <h3>Items:</h3>\n            <div className=\"stat\">\n              {basicStats.getOrdersVolume(filteredData)}\n            </div>\n          </div>\n          <div>\n            <h3>Baskets:</h3>\n            <div className=\"stat\">\n              {basicStats.getTotalOrdersBaskets(filteredData)}\n            </div>\n          </div>\n          <div>\n            <h3>Average Item Cost:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                basicStats.getAverageOrdersItemCost(filteredData)\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Average Basket Cost:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                basicStats.getAverageOrdersBasketCost(filteredData)\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Turnover:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                basicStats.getTotalOrdersTurnover(filteredData)\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h2>Sales</h2>\n        <div className=\"home-row\">\n          <div>\n            <h3>Items:</h3>\n            <div className=\"stat\">\n              {basicStats.getSalesVolume(filteredData)}\n            </div>\n          </div>\n          <div>\n            <h3>Baskets:</h3>\n            <div className=\"stat\">\n              {basicStats.getTotalSalesBaskets(filteredData)}\n            </div>\n          </div>\n          <div>\n            <h3>Average Item Cost:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                basicStats.getAverageSalesItemCost(filteredData)\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Average Basket Cost:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                basicStats.getAverageSalesBasketCost(filteredData)\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Turnover:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                basicStats.getTotalSalesTurnover(filteredData)\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h2>Returns</h2>\n        <div className=\"home-row\">\n          <div>\n            <h3>Items:</h3>\n            <div className=\"stat\">\n              {basicStats.getTotalReturns(filteredData)}\n            </div>\n          </div>\n          <div>\n            <h3>Baskets:</h3>\n            <div className=\"stat\">\n              {basicStats.getTotalReturnsBaskets(filteredData)}\n            </div>\n          </div>\n          <div>\n            <h3>Average Item Cost:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                Math.round(basicStats.getAverageReturnedItemCost(filteredData))\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Average Basket Cost:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                basicStats.getAverageReturnsBasketCost(filteredData)\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Returns Turnover:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                Math.round(basicStats.getTotalReturnsCost(filteredData))\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h2>Fees</h2>\n        <div className=\"home-row\">\n          <div>\n            <h3>Average Fee Fraction:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", percentFormat).format(\n                basicStats.getAverageFeeFraction(filteredData)\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Average Fee Per Item:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n              }).format(basicStats.getAverageFee(filteredData))}\n            </div>\n          </div>\n          <div>\n            <h3>Actual Income:</h3>\n            <div className=\"stat\">\n              {new Intl.NumberFormat(\"en-US\", currencyFormat).format(\n                Math.round(basicStats.getTotalActualIncome(filteredData))\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport RenderIncomeByDevice from \"../renderers/renderIncomeByDevice\";\nimport \"./Main.css\";\n\nimport RenderIncomeByTag from \"../renderers/renderIncomeByTag\";\nimport incomeByTag from \"../functions/incomeByTag\";\nimport incomeByCategory from \"../functions/incomeByCategory\";\nimport RenderIncomeByCategory from \"../renderers/renderIncomeByCategory\";\nimport incomeByDevice from \"../functions/incomeByDevice\";\nimport RenderIncomeByTagAndDate from \"../renderers/renderIncomeByTagAndDate\";\nimport incomeByTagAndDay from \"../functions/incomeByTagAndDay\";\nimport collateDataBy from \"../functions/collateDataBy\";\nimport salesByDevice from \"../functions/salesByDevice\";\nimport RenderSalesByDevice from \"../renderers/renderPiechart\";\nimport RenderPiechart from \"../renderers/renderPiechart\";\nimport Sales from \"./Sales\";\nimport Home from \"./Home\";\nimport filter from \"../functions/filter\";\n\nconst Main = ({\n  chart,\n  jsObjData,\n  specifiedCommissions,\n  selectedCategories,\n  categories,\n  selectedTags,\n}) => {\n  // Guard against lack of data\n  if (!jsObjData[\"Fee-Orders\"]) {\n    return (\n      <div className=\"main\">\n        <div className=\"chart-container\"></div>\n      </div>\n    );\n  }\n\n  let filteredData = filter(jsObjData, selectedCategories, selectedTags);\n  let renderChart;\n  switch (chart) {\n    case \"devices\":\n      renderChart = (\n        <div className=\"chart-container\">\n          <RenderIncomeByDevice\n            totalsByDevice={incomeByDevice(\n              jsObjData,\n              specifiedCommissions,\n              categories\n            )}\n          />\n        </div>\n      );\n      break;\n    case \"tag\":\n      renderChart = (\n        <div className=\"chart-container\">\n          <RenderIncomeByTag\n            totalsByTag={incomeByTag(filteredData, specifiedCommissions)}\n          />\n        </div>\n      );\n      break;\n    case \"category\":\n      renderChart = (\n        <div className=\"chart-container\">\n          <RenderIncomeByCategory\n            totalsByCategory={incomeByCategory(\n              filteredData,\n              specifiedCommissions,\n              selectedCategories\n            )}\n          />\n        </div>\n      );\n      break;\n    case \"time\":\n      renderChart = (\n        <div className=\"chart-container\">\n          <RenderIncomeByTagAndDate\n            totalsByTagAndDate={incomeByTagAndDay(\n              filteredData,\n              specifiedCommissions,\n              selectedCategories\n            )}\n          />\n        </div>\n      );\n      break;\n    case \"sales\":\n      renderChart = (\n        <Sales\n          jsObjData={filteredData}\n          specifiedCommissions={specifiedCommissions}\n          selectedCategories={selectedCategories}\n          selectedTags={selectedTags}\n        />\n      );\n      break;\n    case \"home\":\n      renderChart = (\n        <Home\n          jsObjData={filteredData}\n          specifiedCommissions={specifiedCommissions}\n          selectedCategories={selectedCategories}\n          selectedTags={selectedTags}\n        />\n      );\n      break;\n    default:\n      renderChart = (\n        <Home\n          jsObjData={jsObjData}\n          specifiedCommissions={specifiedCommissions}\n          selectedCategories={selectedCategories}\n          selectedTags={selectedTags}\n        />\n      );\n  }\n\n  let dateBanner = <div></div>;\n\n  if (jsObjData[\"Fee-Orders\"]) {\n    let lastDate = String(jsObjData[\"Fee-Orders\"][0].date.split(\" \")[0]);\n    let firstDate = String(\n      jsObjData[\"Fee-Orders\"][jsObjData[\"Fee-Orders\"].length - 1].date.split(\n        \" \"\n      )[0]\n    );\n    dateBanner = (\n      <div>\n        <p>\n          Date ranges from: {firstDate} to {lastDate}\n        </p>\n      </div>\n    );\n  }\n\n  //Return Chart if data is present\n\n  return (\n    <div className=\"main\">\n      {dateBanner}\n      {renderChart}\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport \"./TagSettings.css\";\nimport incomeByTag from \"../../functions/incomeByTag\";\n\nconst TagSettings = ({\n  tags,\n  selectedTags,\n  handleTagSelect,\n  onSelectAllTags,\n  data,\n  specifiedCommissions,\n  onTop10TagClick,\n}) => {\n  const [tagDisplayOrder, setTagDisplayOrder] = useState(\"income\");\n  const [orderedTags, setOrderedTags] = useState(tags);\n\n  //Prevent form submission.\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const handleSelectAllTags = (event) => {\n    event.preventDefault();\n    onSelectAllTags(event);\n  };\n\n  const handleTagSort = (event) => {\n    event.preventDefault();\n    if (event.target.dataset.order !== tagDisplayOrder) {\n      if (\n        event.target.dataset.order === \"alpha\" ||\n        event.target.dataset.order === \"income\"\n      )\n        setTagDisplayOrder(event.target.dataset.order);\n    }\n  };\n\n  const handleTop10TagClick = (event) => {\n    event.preventDefault();\n    onTop10TagClick(event);\n  };\n\n  const updateTags = (jsObjData) => {\n    let tagsArray = incomeByTag(\n      jsObjData,\n      specifiedCommissions,\n      tags.map((item) => {\n        return item.tag;\n      })\n    );\n\n    //Sort based on user selected order.\n    switch (tagDisplayOrder) {\n      case \"income\":\n        tagsArray.sort((a, b) => a.income > b.income);\n        break;\n      case \"alpha\":\n        tagsArray.sort((a, b) => a.tag.localeCompare(b.tag));\n        break;\n      default:\n        tagsArray.sort((a, b) => a.income > b.income);\n    }\n\n    if (!orderedTags.every((item, iter) => item.tag === tagsArray[iter].tag)) {\n      setOrderedTags(tagsArray);\n    }\n  };\n\n  //initially order tags\n  if (!data) {\n    return null;\n  } else {\n    updateTags(data);\n  }\n\n  let listTags = [];\n  for (let item of orderedTags) {\n    listTags.push(\n      <div key={item.tag} className=\"tag\">\n        <input\n          className=\"checkbox\"\n          type=\"checkbox\"\n          checked={selectedTags.includes(item.tag)}\n          onClick={handleTagSelect}\n          data-tag={item.tag}\n        />\n        <div className=\"tag-name\">{item.tag}</div>\n        {/* <div>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            data-category={item.category}\n            onChange={handleCommissionChange}\n            className=\"commission-input\"\n            value={100 * Number(item.commission)}\n            name={item.category}\n          />\n        </div> */}\n      </div>\n    );\n  }\n  return (\n    <form onSubmit={handleFormSubmit} className=\"tag-table\">\n      {/* <button onClick={handleResetCommissions}>Reset Commissions</button> */}\n      <button onClick={handleTagSort} data-order=\"income\">\n        Sort by Income\n      </button>\n      <button onClick={handleTagSort} data-order=\"alpha\">\n        Sort alphabetically\n      </button>\n\n      <button onClick={handleSelectAllTags}>Select All/None</button>\n      <button onClick={handleTop10TagClick}>Select Top 10/All</button>\n\n      {listTags}\n    </form>\n  );\n};\n\nexport default TagSettings;\n","import React, { useState } from \"react\";\nimport getCommission from \"../../functions/getCommission\";\nimport incomeByCategory from \"../../functions/incomeByCategory\";\nimport \"./CommissionTable.css\";\n\nfunction CommissionTable({\n  data,\n  specifiedCommissions,\n  onCommissionChange,\n  onResetCommissions,\n  onTop10Click,\n  selectedCategories,\n  handleCategorySelect,\n  categories,\n  onSelectAll,\n}) {\n  // console.log(\"updateCommissions1\", props.specifiedCommissions);\n\n  const [categoryDisplayOrder, setCategoryDisplayOrder] = useState(\"income\");\n\n  const [commissions, setCommissions] = useState([]);\n\n  const updateCommissions = (jsObjData) => {\n    let categoriesArray = incomeByCategory(\n      jsObjData,\n      specifiedCommissions,\n      categories.map((item) => {\n        return item.category;\n      })\n    );\n\n    //Sort based on user selected order.\n    switch (categoryDisplayOrder) {\n      case \"income\":\n        categoriesArray.sort((a, b) => a.income > b.income);\n        break;\n      case \"alpha\":\n        categoriesArray.sort((a, b) => a.category.localeCompare(b.category));\n        break;\n      default:\n        categoriesArray.sort((a, b) => a.income > b.income);\n    }\n\n    let commissionTable = [];\n\n    for (let obj of categoriesArray) {\n      commissionTable.push({\n        category: obj.category,\n        commission: getCommission(obj.category, specifiedCommissions),\n      });\n    }\n\n    // for row in data,\n    // if category not already logged\n    // add category and getCommission\n    if (commissionTable.length !== commissions.length) {\n      setCommissions(commissionTable);\n    } else {\n      for (let i in commissionTable) {\n        if (\n          commissionTable[i].category !== commissions[i].category ||\n          commissionTable[i].commission !== commissions[i].commission\n        ) {\n          setCommissions(commissionTable);\n        }\n      }\n    }\n  };\n\n  //initially set commissions\n  if (!data) {\n    return null;\n  } else {\n    updateCommissions(data);\n  }\n\n  const handleResetCommissions = (event) => {\n    event.preventDefault();\n    onResetCommissions(event);\n  };\n\n  const handleCommissionChange = (event) => {\n    let category = event.target.dataset.category;\n    let value = event.target.value;\n    onCommissionChange(category, value);\n  };\n\n  //Prevent form submission.\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const handleSelectAll = (event) => {\n    event.preventDefault();\n    onSelectAll(event);\n  };\n\n  const handleCategorySort = (event) => {\n    event.preventDefault();\n    if (event.target.dataset.order !== categoryDisplayOrder) {\n      if (\n        event.target.dataset.order === \"alpha\" ||\n        event.target.dataset.order === \"income\"\n      )\n        setCategoryDisplayOrder(event.target.dataset.order);\n    }\n  };\n\n  const handleTop10Click = (event) => {\n    event.preventDefault();\n    onTop10Click(event);\n  };\n\n  let listCategories = [];\n  //console.log(\"commissionTable\", categories);\n  for (let item of commissions) {\n    listCategories.push(\n      <div key={item.category} className=\"category\">\n        <input\n          className=\"checkbox\"\n          type=\"checkbox\"\n          checked={selectedCategories.includes(item.category)}\n          onClick={handleCategorySelect}\n          data-category={item.category}\n        />\n        <div className=\"category-name\">{item.category}</div>\n        <div>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            data-category={item.category}\n            onChange={handleCommissionChange}\n            className=\"commission-input\"\n            value={100 * Number(item.commission)}\n            name={item.category}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  console.log(\"props.categories\", categories, selectedCategories);\n  return (\n    <form onSubmit={handleFormSubmit} className=\"category-table\">\n      <button onClick={handleResetCommissions}>Reset Commissions</button>\n      <button onClick={handleCategorySort} data-order=\"income\">\n        Sort by Income\n      </button>\n      <button onClick={handleCategorySort} data-order=\"alpha\">\n        Sort alphabetically\n      </button>\n\n      <button onClick={handleSelectAll}>Select All/None</button>\n      <button onClick={handleTop10Click}>Select Top 10/All</button>\n\n      {listCategories}\n      {/* <button>Apply changes</button> */}\n    </form>\n  );\n}\nexport default CommissionTable;\n","import React from \"react\";\n// import CommissionTable from \"../../renderers/commissionTable\";\n\nconst AccordianItem = ({ expanded, contents }) => {\n  if (expanded) {\n    return (\n      <div className=\"category-settings\">\n        {/* <div className=\"category-settings-header\">Category</div> */}\n        <div className=\"category-settings-body\">{contents}</div>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default AccordianItem;\n","import React, { useState } from \"react\";\nimport \"./Settings.css\";\nimport TagSettings from \"./TagSettings\";\nimport CommissionTable from \"./CommissionTable\";\nimport AccordianItem from \"./AccordianItem\";\n\nconst Settings = ({\n  jsObjData,\n  specifiedCommissions,\n  handleCommissionChange,\n  handleResetCommissions,\n  handleTop10Click,\n  selectedCategories,\n  handleCategorySelect,\n  categories,\n  onSelectAll,\n  handleTagSelect,\n  tags,\n  selectedTags,\n  handleSelectAllTags,\n  handleTop10TagClick,\n  handleClearAllFilters,\n}) => {\n  const [expandedSection, setExpandedSection] = useState(null);\n\n  // Expand and minimize accordian.\n  const handleButtonClick = (event) => {\n    console.log(\"clicked\");\n    let section = event.target.dataset.section;\n    console.log(section);\n    if (section !== expandedSection) {\n      setExpandedSection(section);\n    } else {\n      setExpandedSection(null);\n    }\n  };\n\n  return (\n    <div className=\"settings\">\n      <button onClick={handleClearAllFilters}>Clear all filters</button>\n      <button\n        data-section=\"tags\"\n        onClick={handleButtonClick}\n        className=\"accordian\"\n      >\n        Tags\n      </button>\n      <AccordianItem\n        expanded={expandedSection === \"tags\"}\n        contents={\n          <TagSettings\n            data={jsObjData}\n            specifiedCommissions={specifiedCommissions}\n            tags={tags}\n            selectedTags={selectedTags}\n            handleTagSelect={handleTagSelect}\n            onSelectAllTags={handleSelectAllTags}\n            onTop10TagClick={handleTop10TagClick}\n          />\n        }\n      />\n      <button\n        data-section=\"categories\"\n        onClick={handleButtonClick}\n        className=\"accordian\"\n      >\n        Categories\n      </button>\n      <AccordianItem\n        expanded={expandedSection === \"categories\"}\n        contents={\n          <CommissionTable\n            data={jsObjData}\n            specifiedCommissions={specifiedCommissions}\n            onCommissionChange={handleCommissionChange}\n            onResetCommissions={handleResetCommissions}\n            selectedCategories={selectedCategories}\n            handleCategorySelect={handleCategorySelect}\n            categories={categories}\n            onSelectAll={onSelectAll}\n            onTop10Click={handleTop10Click}\n          />\n        }\n      />\n\n      {/* <div className=\"tag-settings\">\n        <div className=\"tag-settings-header\">Tag</div>\n        <div className=\"tag-settings-body\"></div>\n      </div> */}\n    </div>\n  );\n};\nexport default Settings;\n","import XLSX from \"xlsx\";\n// import { readFile } from \"react-native-fs\";\n\n// const file = \"../resources/exampleUSASales.xlsx\";\n/* read a workbook */\n\nconst orderPageToJson = (pageData) => {\n  if (!pageData) {\n    throw Error(\"Sheet is not compatible: (No Fee-Orders Sheet)\");\n  }\n\n  if (pageData[1].length !== 10) {\n    throw Error(\"Sheet is not compatible\");\n  }\n\n  const orderPageHeaders = [\n    \"Category\",\n    \"Name\",\n    \"ASIN\",\n    \"Date\",\n    \"Qty\",\n    \"Price($)\",\n    \"Link Type\",\n    \"Tag\",\n    \"Indirect Sales\",\n    \"Device Type Group\",\n  ];\n\n  for (let i in orderPageHeaders) {\n    if (orderPageHeaders[i] !== pageData[1][i]) {\n      throw Error(\"Data values not recognised\");\n    }\n  }\n\n  let orderPageJson = [];\n\n  for (let i = 2; i < pageData.length; i++) {\n    let row = pageData[i];\n    orderPageJson.push({\n      category: row[0],\n      name: row[1],\n      asin: row[2],\n      date: row[3],\n      qty: row[4],\n      \"price($)\": row[5],\n      linkType: row[6],\n      tag: row[7],\n      indirectSales: row[8],\n      deviceTypeGroup: row[9],\n    });\n  }\n  console.log(\"orderPageJson\", orderPageJson);\n  return orderPageJson;\n};\n\nconst earningsPageToJson = (pageData) => {\n  if (!pageData) {\n    throw Error(\"Sheet is not compatible: (No Fee-Earnings Sheet)\");\n  }\n\n  if (pageData[1].length !== 12) {\n    throw Error(\"Sheet is not compatible\");\n  }\n\n  const earningsPageHeaders = [\n    \"Category\",\n    \"Name\",\n    \"ASIN\",\n    \"Seller\",\n    \"Tracking ID\",\n    \"Date Shipped\",\n    \"Price($)\",\n    \"Items Shipped\",\n    \"Returns\",\n    \"Revenue($)\",\n    \"Ad Fees($)\",\n    \"Device Type Group\",\n  ];\n\n  for (let i in earningsPageHeaders) {\n    if (earningsPageHeaders[i] !== pageData[1][i]) {\n      throw Error(\"Data values not recognised\");\n    }\n  }\n\n  let earningsPageJson = [];\n\n  for (let i = 2; i < pageData.length; i++) {\n    let row = pageData[i];\n    earningsPageJson.push({\n      category: row[0],\n      name: row[1],\n      asin: row[2],\n      seller: row[3],\n      tag: row[4],\n      dateShipped: row[5],\n      price: row[6],\n      itemsShipped: row[7],\n      returns: row[8],\n      \"revenue($)\": row[9],\n      \"adFees($)\": row[10],\n      deviceTypeGroup: row[11],\n    });\n  }\n  console.log(\"earningsPageJson\", earningsPageJson);\n  return earningsPageJson;\n};\n\nconst arrayToJsObj = (data) => {\n  let jsObjData = {};\n\n  if (!data[\"Fee-Orders\"]) {\n    throw Error(\"Sheet is not compatible: (No Fee-Orders Sheet)\");\n  } else {\n    jsObjData[\"Fee-Orders\"] = orderPageToJson(data[\"Fee-Orders\"]);\n  }\n\n  if (!data[\"Fee-Earnings\"]) {\n    throw Error(\"Sheet is not compatible: (No Fee-Orders Sheet)\");\n  } else {\n    jsObjData[\"Fee-Earnings\"] = earningsPageToJson(data[\"Fee-Earnings\"]);\n  }\n\n  console.log(\"JsObjectData\", jsObjData);\n  return jsObjData;\n};\n\nconst xlsxImporter = (e) => {\n  //Convert an XLSX into jsonData\n  let file = e.target.files[0];\n  let data = {};\n  console.log(\"here is what the file looks like\", e.target.files[0]);\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      // call 'xlsx' to read the file\n      let workbook = XLSX.read(event.target.result, { type: \"binary\" });\n      /* convert from workbook to array of arrays */\n      workbook.SheetNames.forEach((sheetName) => {\n        let workSheet = workbook.Sheets[sheetName];\n        data[sheetName] = XLSX.utils.sheet_to_json(workSheet, { header: 1 });\n      });\n      // var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      // const data = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });\n\n      console.log(\"data\", data);\n      resolve(arrayToJsObj(data));\n    };\n    reader.onerror = (e) => {\n      console.log(e);\n    };\n    reader.readAsBinaryString(file);\n  });\n};\n\nexport default xlsxImporter;\n","const getUniqueValues = (listOfObjects, objectKey) => {\n  // Returns a list of the unique values contained in a list of objects, igven a specific object key.\n\n  let uniqueCategories = [];\n\n  for (let item of listOfObjects) {\n    if (uniqueCategories.includes(item[objectKey])) continue;\n    uniqueCategories.push(item[objectKey]);\n  }\n\n  return uniqueCategories;\n};\n\nexport default getUniqueValues;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport Main from \"./components/Main\";\nimport Settings from \"./components/settings/Settings\";\n\nimport xlsxImporter from \"./functions/xlsxImporter\";\nimport getUniqueValues from \"./functions/getUniqueValues\";\nimport incomeByCategory from \"./functions/incomeByCategory\";\nimport incomeByTag from \"./functions/incomeByTag\";\n\nfunction App() {\n  const [jsObjData, setJsObjData] = useState(false);\n  const [specifiedCommissions, setSpecifiedCommissions] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [tags, setTags] = useState([]);\n\n  const initCategories = (data) => {\n    let feeEarningsCategories = getUniqueValues(\n      data[\"Fee-Earnings\"],\n      \"category\"\n    );\n    let feeOrdersCategories = getUniqueValues(data[\"Fee-Orders\"], \"category\");\n    let combined = [...feeEarningsCategories, ...feeOrdersCategories];\n    let combinedUnique = [...new Set(combined)];\n\n    let newCategories = combinedUnique.map((category) => {\n      return {\n        category: category,\n        selected: true,\n        specifiedCommission: null,\n      };\n    });\n    setCategories(newCategories);\n  };\n\n  const initTags = (data) => {\n    let feeEarningsTags = getUniqueValues(data[\"Fee-Earnings\"], \"tag\");\n    let feeOrdersTags = getUniqueValues(data[\"Fee-Orders\"], \"tag\");\n    let combined = [...feeEarningsTags, ...feeOrdersTags];\n    let combinedUnique = [...new Set(combined)];\n\n    let newTags = combinedUnique.map((tag) => {\n      return {\n        tag: tag,\n        selected: true,\n      };\n    });\n    setTags(newTags);\n  };\n\n  const handleFileInput = async (e) => {\n    try {\n      const data = await xlsxImporter(e);\n      initCategories(data);\n      initTags(data);\n      setSelectedCategories(getUniqueValues(data[\"Fee-Orders\"], \"category\"));\n      setSelectedTags(getUniqueValues(data[\"Fee-Orders\"], \"tag\"));\n      setJsObjData(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleTop10Click = (event) => {\n    let categoriesArray = incomeByCategory(\n      jsObjData,\n      specifiedCommissions,\n      categories.map((item) => {\n        return item.category;\n      })\n    );\n\n    categoriesArray.sort((a, b) => a.income > b.income);\n\n    let top10Categories = [];\n    for (let i = 0; i < 10; i++) {\n      top10Categories.push(categoriesArray[i].category);\n      console.log(\"top10click:\", categoriesArray[i]);\n    }\n    if (top10Categories.toString() !== selectedCategories.toString()) {\n      setSelectedCategories(top10Categories);\n    } else {\n      setSelectedCategories(categories.map((item) => item.category));\n    }\n  };\n\n  const handleTop10TagClick = (event) => {\n    let tagsArray = incomeByTag(\n      jsObjData,\n      specifiedCommissions,\n      tags.map((item) => {\n        return item.tag;\n      })\n    );\n\n    tagsArray.sort((a, b) => a.income > b.income);\n\n    let top10Categories = [];\n    for (let i = 0; i < 10; i++) {\n      top10Categories.push(tagsArray[i].tag);\n      console.log(\"top10click:\", tagsArray[i]);\n    }\n    if (top10Categories.toString() !== selectedTags.toString()) {\n      setSelectedTags(top10Categories);\n    } else {\n      setSelectedTags(tags.map((item) => item.tag));\n    }\n  };\n\n  const handleSelectAll = (event) => {\n    if (selectedCategories.length) {\n      setSelectedCategories([]);\n    } else {\n      setSelectedCategories(categories.map((item) => item.category));\n    }\n  };\n\n  const handleSelectAllTags = (event) => {\n    if (selectedTags.length) {\n      setSelectedTags([]);\n    } else {\n      setSelectedTags(tags.map((item) => item.tag));\n    }\n  };\n\n  const handleCategorySelect = (event) => {\n    console.log(\"Category Select: \");\n    if (selectedCategories.includes(event.target.dataset.category)) {\n      setSelectedCategories(\n        selectedCategories.filter((category) => {\n          return category !== event.target.dataset.category;\n        })\n      );\n    } else {\n      setSelectedCategories([\n        ...selectedCategories,\n        event.target.dataset.category,\n      ]);\n    }\n\n    let changedCategory = event.target.dataset.category;\n    let categoryIndex = categories.findIndex((item) => {\n      return item.category === changedCategory;\n    });\n    if (categoryIndex === -1) return;\n\n    categories[categoryIndex].selected = !categories[categoryIndex].selected;\n  };\n\n  const handleTagSelect = (event) => {\n    console.log(\"Tag Select: \");\n    if (selectedTags.includes(event.target.dataset.tag)) {\n      setSelectedTags(\n        selectedTags.filter((tag) => {\n          return tag !== event.target.dataset.tag;\n        })\n      );\n    } else {\n      setSelectedTags([...selectedTags, event.target.dataset.tag]);\n    }\n\n    let changedTag = event.target.dataset.tag;\n    let tagIndex = tags.findIndex((item) => {\n      return item.tag === changedTag;\n    });\n    if (tagIndex === -1) return;\n\n    tags[tagIndex].selected = !tags[tagIndex].selected;\n  };\n\n  const handleResetCommissions = (event) => {\n    setSpecifiedCommissions([]);\n  };\n\n  const handleCommissionChange = (category, value) => {\n    // console.log(\"chaaaanging\", value, category);\n    let index = specifiedCommissions.findIndex(\n      (item) => item.category === category\n    );\n    if (index === -1) {\n      // console.log(\"category not found\");\n      setSpecifiedCommissions(\n        specifiedCommissions.concat({\n          category: category,\n          commission: Number((value / 100).toFixed(2)),\n        })\n      );\n    } else {\n      let newCommissions = [...specifiedCommissions];\n      newCommissions[index].commission = Number((value / 100).toFixed(2));\n      setSpecifiedCommissions(newCommissions);\n    }\n  };\n  // Handle selection of which chart to render.\n  const [chart, setChart] = useState(\"home\");\n  const handleChartSelect = (event) => {\n    setChart(event.target.dataset.chartname);\n  };\n\n  // Show or hide Settings\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const handleToggleSettings = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n  let appClassString = \"App settings-closed\";\n  if (settingsOpen) {\n    appClassString = \"App settings-open\";\n  }\n\n  const handleClearAllFilters = () => {\n    setSelectedTags(tags.map((item) => item.tag));\n    setSelectedCategories(categories.map((item) => item.category));\n  };\n\n  return (\n    <div className={appClassString}>\n      <Header\n        handleFileInput={handleFileInput}\n        handleToggleSettings={handleToggleSettings}\n      />\n      <Sidebar chart={chart} handleChartSelect={handleChartSelect} />\n      <Main\n        chart={chart}\n        jsObjData={jsObjData}\n        specifiedCommissions={specifiedCommissions}\n        selectedCategories={selectedCategories}\n        selectedTags={selectedTags}\n        categories={categories}\n        tags={tags}\n      />\n      <Settings\n        jsObjData={jsObjData}\n        specifiedCommissions={specifiedCommissions}\n        handleCommissionChange={handleCommissionChange}\n        handleResetCommissions={handleResetCommissions}\n        handleTop10Click={handleTop10Click}\n        selectedCategories={selectedCategories}\n        selectedTags={selectedTags}\n        handleCategorySelect={handleCategorySelect}\n        categories={categories}\n        tags={tags}\n        onSelectAll={handleSelectAll}\n        handleTagSelect={handleTagSelect}\n        handleSelectAllTags={handleSelectAllTags}\n        handleTop10TagClick={handleTop10TagClick}\n        handleClearAllFilters={handleClearAllFilters}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}